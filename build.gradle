plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
	id 'eclipse'
}

version = project.mod_version
group = project.maven_group

// sourceCompatibility = JavaVersion.VERSION_1_8
// targetCompatibility = JavaVersion.VERSION_1_8

//java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

base {
	archivesBaseName = project.archives_base_name
}

repositories {
        maven {
                name = "JitPack"
                url = "https://jitpack.io"
        }
        // jcenter()
        maven {
                name = 'sponge'
                url = 'https://repo.spongepowered.org/maven'
        }
}

loom {
	splitEnvironmentSourceSets()

	mods
	{
		"shopper" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	implementation 'com.google.code.gson:gson:2.8.8'
	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
		// expand "loader_version": project.loader_version
		// expand "minecraft_version": project.minecraft_version
	}
}


// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
// task sourcesJar(type: Jar, dependsOn: classes) {
// 	classifier = "sources"
// 	from sourceSets.main.allSource
// }

jar {
	from("LICENSE") {
		rename {"${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			// // add all the jars that should be included when publishing to maven
			// artifact(remapJar) {
			// 	builtBy remapJar
			// }
			// artifact(sourcesJar) {
			// 	builtBy remapSourcesJar
			// }
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

// task copyJar(type: Copy) {
//     from jar
//     into "${System.properties['user.home']}${File.separator}.minecraft${File.separator}mods"
// }


// build.dependsOn copyJar
